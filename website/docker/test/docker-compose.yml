services:
  # Laravel Application
  app:
    build:
      context: ../../
      dockerfile: docker/Dockerfile.volume
    container_name: laravel_app_test
    restart: unless-stopped
    volumes:
      - ./.env:/var/www/.env  # Bind mount: Application environment variables
      - app_files:/var/www    # Volume: Application files to be served by nginx

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: laravel_nginx_test
    restart: unless-stopped
    ports:
      - "80:80"     # HTTP
      - "443:443"   # HTTPS
    volumes:
      - ./../prod/nginx/nginx.conf:/etc/nginx/nginx.conf:ro  # Bind mount: Production nginx config
      - ./../prod/nginx/default.conf.template:/etc/nginx/conf.d/default.conf.template:ro        # Bind mount: Production default config
      - ./../prod/nginx/entrypoint.sh:/entrypoint.sh:ro                        # Bind mount: Entrypoint script
      - app_files:/var/www                                                # Volume: Application files to be served by nginx
      - certs:/etc/nginx/ssl/:ro                                          # Volume: Https certificates from certs container
    entrypoint: ["/bin/sh", "/entrypoint.sh"]
    depends_on:
      - app
      - certs
    environment:
      - APP_DOMAIN=${APP_DOMAIN}     # Make the .env variable for application domain available for generating nginx.conf

  # Certificate Generation Service
  certs:
    build:
      context: ./
      dockerfile: Dockerfile.certs
    container_name: laravel_certs_test
    command: >
      sh -c "
        mkdir -p /etc/nginx/ssl/live/${APP_DOMAIN} &&
        openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/live/${APP_DOMAIN}/privkey.pem -out /etc/nginx/ssl/live/${APP_DOMAIN}/fullchain.pem -subj '/CN=${APP_DOMAIN}'
      "
    volumes:
      - certs:/etc/nginx/ssl/:rw  # Volume: Share the generated SSL certificates with nginx

volumes:
  app_files:
  certs: